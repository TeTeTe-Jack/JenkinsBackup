#!groovy

pipeline{
  
  agent{
    label 'master'
  }
  
  parameters{
    string(name: 'slackChannel',defaultValue: 'None', description: '')
    string(name: 'jenkins_homeDir',defaultValue: 'None', description: '')
    string(name: 'shareJenkinsDir',defaultValue: 'None', description: '')
    string(name: 'shareBackupDir',defaultValue: 'None', description: '')
    string(name: 'backupServer',defaultValue: 'None', description: '')
    string(name: 'password',defaultValue: 'None', description: '')
  }
  
  stages{
    
    stage('check parameters'){
      steps{
        sh './script/checkParameter.sh -xe $slackChannel'
        sh './script/checkParameter.sh -xe $jenkins_homeDir'
        sh './script/checkParameter.sh -xe $shareJenkinsDir'
        sh './script/checkParameter.sh -xe $shareBackupDir'
        sh './script/checkParameter.sh -xe $backupServer'
      }
    }
  
    stage('Notify slack to start backup job'){
      steps{
        slackSend channel: '$slackChannel', color: 'good', message: 'Job start ${JOB_NAME}'
      }
    }
  
    stage('Mount Backup Server'){
      steps{
        sh './script/mount.sh -xe $backupServer $shareBackupDir $shareJenkinsDir $password'
      }
    }
  
    stage('Make backup file on Backup Server'){
      steps{
        sh './script/makeBackup.sh -xe $jenkins_homeDir $shareJenkinsDir'
      }
    }
    
    stage('Unmount'){
      steps{
        sh './script/unmount.sh -xe $shareJenkinsDir'
      }
    }
  }
  
  post{
    
    always{
      slackSend channel: '$slackChannel', color: 'good', message: 'Job Finish ${JOB_NAME}'
    }
      
    success{
      slackSend channel: '$slackChannel', color: 'good', message: 'Job Success ${JOB_NAME}'
    }
    
    failure{
      slackSend channel: '$slackChannel', color: 'danger', message: 'Job Failure ${JOB_NAME}'
    }
    
    aborted{
      slackSend channel: '$slackChannel', color: 'warning', message: 'Job Aborted ${JOB_NAME}'
    }
    
  }
}